function [ecModel, carbonNumber] = addCarbonUnbalancedRxns(ecModel, biomassRxns)
% addCarbonBiomass
%   Add to the excarbon field the number of unbalanced carbons in unbalanced
%   reactions.
%   To be used when the unbalanced carbons in the reactions represent
%   exported/consumed carbons, for instance in biomass reactions in some
%   models.
%   It only works for unbalanced reactions.
%
% Input:
%   ecModel           ecModel that was generated by makeEcModel, or loaded from
%                     an earlier run.
%   biomassRxns       cell array of unbalanced biomass reactions taken for
%                     the calculation of the numbe of carbons
% Output:
%   ecModel           ecModel
%   carbonNumber      the number of carbons calculated for each input reaction


% Add previously excarbon field to model if not exist
if ~isfield(ecModel,'excarbon')
    ecModel = addCarbonNum(ecModel);
end

% Create variable to save the number of carbon of each input reaction
carbonNumber = [];
[~,idxs] = ismember(biomassRxns,ecModel.rxns);
% Loop through each reaction
for i=1:length(idxs)
    idx = idxs(i);
    if idx ~= 0
        % Get metabolites participating in the reaction
        mets_index = find(ecModel.S(:,idx) ~= 0);
        % Value of the metabolites in the reaction
        mets_values = ecModel.S(mets_index, idx);
        % Formula of the metabolites in the reaction
        mets_formulas = ecModel.metFormulas(mets_index);
        % Elemental composition of each metabolite
        [Ematrix, elements] = getElementalComposition(mets_formulas,{'C'});
        % Index of carbon for Ematrix
        Ci = find(strcmp(elements, 'C'));
        % Value of number of carbons
        Cvalues = Ematrix(:,Ci);
        % Multiply the stoichiometrical coefficient of each metabolite by its
        % carbon number and sum the value of every metabolite to get the total
        % carbon number
        Cnumber = sum(mets_values.*Cvalues);
    % If no carbon is found, nan is returned
    else
        carbonNumber = NaN;
    end
    % Add to carbonNumber variable
    carbonNumber = [carbonNumber, Cnumber];
end
% Transform number to positive if needed
carbonNumber = abs(carbonNumber);
% Add to ecModel excarbon field
ecModel.excarbon(idxs(idxs ~= 0)) = carbonNumber(~isnan(carbonNumber));
end