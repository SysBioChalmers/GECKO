function ecModel = bayesianSensitivityTuning(ecModel,modelAdapter,maxIterations)
% bayesianSensitivityTuning
%   Modifies kcats to better fit experimental data. Currently only works with 
%   light models.
%
% Input:
%   ecModel         ecModel that was generated by makeEcModel, or loaded from
%                   an earlier run. Not compatible with ecModels generated by
%                   earlier GECKO versions (pre 3.0).
%   modelAdapter    a loaded model adapter (Optional, will otherwise use the
%                   default model adapter).
%   maxIterations   The maximum number of iterations to run (Optional, default 150)
%
% Output:
%   model           ecModel with new kcats, not applied.
%

if nargin < 3
    maxIterations = 150;
end

if nargin < 2 || isempty(modelAdapter)
    modelAdapter = ModelAdapterManager.getDefaultAdapter();
    if isempty(modelAdapter)
        error('Either send in a modelAdapter or set the default ecModel adapter in the ModelAdapterManager.')
    end
end

basePath = modelAdapter.getParameters().path;

growthdata = table2cell(readtable(fullfile(basePath,'data','BayesianGrowthRates.csv')));
max_growth = table2cell(readtable(fullfile(basePath,'data','BayesianMaxGrowth.csv')));
rxn2block = table2cell(readtable(fullfile(basePath,'data','BayesianRxn2Block.csv'), 'Delimiter', ','));

proc = 18;
numPerGeneration = 126;
rejectnum = 0.2;

%these will be updated in the loop below
kcats = ecModel.ec.kcat;
kcat_var = ones(length(ecModel.ec.kcat),1);

D = abc_max(ecModel,kcats,growthdata,max_growth,1,1,1,rxn2block);
D_100 = D;
theta_100 = [];
kcat_100 = [];
sampledgeneration = 1;
while D > rejectnum && D_100 > 0.5 % range for D_1 to D_100 is within 0.3 and D_100 should < 0.5
    if sampledgeneration <= maxIterations
        disp(['Running ' num2str(sampledgeneration) ' of ' num2str(maxIterations) ': D = ' num2str(D) ' D_100 = ' num2str(D_100)])
        old = theta_100;
        kcat_old_100 = kcat_100;

        if sampledgeneration == 1
            sample_generation = 144;
        else
            sample_generation = numPerGeneration;
        end
        % generate one maxIterations sample of kcats
        kcat_random_all = arrayfun(@getrSample, kcats, kcat_var,repmat(sample_generation,length(kcats),1),'UniformOutput',false);
        kcat_random_all = cell2mat(kcat_random_all);
        %Simulate and measure RMSE
        parfor j = 1:proc
            rmse_final = abc_max(ecModel,kcat_random_all,growthdata,max_growth,proc,sample_generation,j,rxn2block)
            new_tmp{j} = rmse_final;
        end
        
        new = cell2mat(new_tmp);
        theta = [new,old];
        kcat = [kcat_random_all,kcat_old_100];

        % Initialize an empty set to store the best 100  after each step
        [~,D_idx]= sort(theta,'ascend');
        theta_100 = theta(D_idx(1:100));
        D = abs(theta_100(100)-theta_100(1)); % the largest one theta - smallest theta
        D_100 = theta_100(100);
        kcat_100 = kcat(:,D_idx(1:100));
        %writematrix([kcat_100;repmat(tot_prot_weight,1,length(theta_100));theta_100],['kcat_genra',num2str(sampledgeneration),'.txt'])

        % recalculate the sigma and mu
        ss = num2cell(kcat_100',1);
        [a,b] = arrayfun(@updateprior,ss);
        kcats = a';
        kcat_var = b';
        sampledgeneration = sampledgeneration + 1;
    else
        D = rejectnum;
        D_100 = D;
    end
end

ecModel.ec.kcat = kcats;

end
%code for generating data files from the .mat files in dlkcat
%x = load('C:/Code/Components/GECKO/Gecko3/GECKO/tutorials/tutorial_yeast-GEM/data/Saccharomyces_cerevisiae_dl.mat')
%growthrates = x.growthrates;
%growthrates(strcmp(growthrates(:,1),'Saccharomyces_cerevisiae'),:)
%size(growthrates)
%T = cell2table(growthrates(strcmp(growthrates(:,1),'Saccharomyces_cerevisiae'),:),'VariableNames',{'Species','Substrate','Uptake','sub','ace','eth','gly','pyr','ethyl_acetate','co2','o2','Unused1','Unused2','OxAvail','Unused3','Media'});
%writetable(T,'C:/Code/Components/GECKO/Gecko3/GECKO/tutorials/tutorial_yeast-GEM/data/BayesianGrowthRates.csv');
%maxGrowth = cell2table(x.max_growth, 'VariableNames', {'Species','Substrate','Uptake','sub','ace','eth','gly','pyr','ethyl_acetate','co2','o2','Unused1','Unused2','OxAvail','Unused3','Media'});
%writetable(maxGrowth, 'C:/Code/Components/GECKO/Gecko3/GECKO/tutorials/tutorial_yeast-GEM/data/BayesianMaxGrowth.csv')
%rxn2block = x.rxn2block;
%T = cell2table(rxn2block,'VariableNames',{'Rxns'});
%writetable(T,'C:/Code/Components/GECKO/Gecko3/GECKO/tutorials/tutorial_yeast-GEM/data/BayesianRxn2Block.csv');


